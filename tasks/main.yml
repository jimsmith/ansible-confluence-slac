---
- name: Install RPM Dependencies
  yum: pkg={{ item }} state=latest
  with_items: "{{ rpm_prerequisites }}"
  sudo: yes
  tags:
    - install

- name: Create Confluence Directories
  file: dest={{ item }} mode=775 state=directory owner={{ confluence_user }} group={{ confluence_group }}
  with_items:
    - "{{ basedir }}"
    - "{{ confluence_home }}"
  sudo: yes
  tags:
    - install

- name: Check if Confluence is version is already installed
  stat: path={{ basedir }}/atlassian-confluence-{{ confluence_version }}
  register: confluence_install
  sudo: yes
  tags:
    - install
    - upgrade

- name: Check if Confluence Download Exists in temp directory
  stat: path=/tmp/{{ confluence_installer }}
  when: not confluence_install.stat.exists
  register: installer_download
  sudo: yes
  tags:
    - install
    - upgrade

- name: Download Confluence
  get_url:
    url={{ download_baseurl }}/{{ confluence_installer }}
    dest=/tmp/{{ confluence_installer }} mode=775
  when: not installer_download|skipped and not conftar.stat.exists
  sudo: yes
  tags:
    - install
    - upgrade

- name: Install Confluence
  command: /bin/tar xzf /tmp/{{ confluence_installer }}
  args:
    creates: "{{ basedir }}/atlassian-confluence-{{ confluence_version }}"
    chdir: "{{ basedir }}"
  when: not installer_download|skipped and not confluence_install.stat.exists
  sudo: yes
  tags:
    - install
    - upgrade

- name: Symlink Confluence Directory to Current Version
  file: >
    src={{ basedir }}/atlassian-confluence-{{confluence_version}}
    dest={{ basedir }}/confluence
    state=link
  sudo: yes
  tags:
    - install
    - upgrade

- name: Install the MySQL Database Driver
  copy: >
    src={{ mysql_connector_src_dir }}/{{ mysql_connector_filename }}
    dest={{ basedir }}/confluence/confluence/WEB-INF/lib/{{mysql_connector_filename}}
    owner={{ confluence_user }}
    group={{ confluence_group }}
    mode=775
  when: "{{confluence_version | version_compare('5.0', '>=')}}"
  sudo: yes
  tags:
    - install
    - upgrade

- name: Configure confluence-init.properties
  template: >
    src=confluence-init-properties.j2
    dest={{ basedir }}/confluence/confluence/WEB-INF/classes/confluence-init.properties
  sudo: yes
  tags:
    - install
    - upgrade
    - configure

- name: Configure server.xml
  template: src=server-xml.j2 dest={{ basedir }}/confluence/conf/server.xml
  sudo: yes
  tags:
    - install
    - upgrade
    - configure

- name: Configure crowd.properties
  template: src=crowd-properties.j2 dest={{ basedir }}/confluence/confluence/WEB-INF/classes/crowd.properties
  when: crowd_auth
  sudo: yes
  tags:
    - install
    - upgrade
    - configure
    - crowd

- name: Configure Tomcat.sh
  template: src=Tomcat-sh.j2 dest={{ basedir }}/confluence/bin/Tomcat.sh
  sudo: yes
  tags:
    - install
    - upgrade
    - configure

- name: Set Application Directory Permissions and Ownership
  file: >
    dest={{ basedir }}
    mode=775
    state=directory
    owner={{ confluence_user }}
    group={{ confluence_group }}
    recurse=yes
  sudo: yes
  tags:
    - install
    - upgrade

- name: Check if Keystore Exists on Remote Server
  stat: path={{ keystore_dest_dir }}/{{ keystore_file }}
  register: keystore
  when: use_ssl
  sudo: yes
  tags:
    - install
    - ssl

- name: Create SSL Keystore Directory
  file: >
    path={{ keystore_dest_dir }}
    state=directory
    mode=770
    owner={{ confluence_user }}
    group={{ confluence_group }}
  when: not keystore.stat.exists and use_ssl
  sudo: yes
  tags:
    - install
    - ssl

- name: Copy SSL Keystore
  copy: >
    src={{ keystore_src_dir }}/{{ keystore_file }}
    dest={{ keystore_dest_dir }}/{{ keystore_file }}
    mode=770
    owner={{ confluence_user }}
    group={{ confluence_group }}
  when: not keystore.stat.exists and use_ssl
  sudo: yes
  tags:
    - install
    - ssl

- name: Change Ownership of Confluence Data to Current User (avoids rsync errors when syncing).
  file: >
    dest={{ confluence_home }}
    state=directory
    mode=775
    owner={{ ansible_env.USER }}
    recurse=yes
  sudo: yes
  when: sync_app_data
  tags:
    - sync

# Use delegate_to and mode=push to copy from sync server to the Confluence server.
# Excludes the plugin cache and content index, which will need to be rebuilt on the new server.
- name: Synchronize Confluence Home from Confluence Prod
  synchronize:
    src: "{{ sync_dir }}/"
    dest: "{{ confluence_home }}"
    recursive: yes
    delete: yes
    owner: no
    mode: push
    rsync_opts:
      - "--exclude=plugin-cache/"
      - "--exclude=plugin-osgi-cache/"
      - "--exclude=plugins-temp/"
      - "--exclude=bundled-plugins/"
      - "--exclude=bundled-plugins_language/"
      - "--exclude=index/"
      - "--exclude=journal/"
  delegate_to: "{{ sync_server }}"
  when: sync_app_data
  register: synced
  tags:
    - sync

# Set the permissions back after the sync has occurred.
- name: Set Ownership of Confluence Data to Application User
  file: >
    dest={{ confluence_home }}
    state=directory
    mode=775
    owner={{ conflunce_user }}
    group={{ confluence_group }}
    recursive=yes
  sudo: yes
  when: synced|changed
  tags:
    - sync
